<!DOCTYPE html>
<html>
    <head>
    <!-- Partial HEAD -->
    <%- include('../partials/head'); %> 
    <title>geo</title>
<!-- Agregar estilos al body  -->
<link rel="stylesheet" href="stylesheets/style.css">
    </head>
  <body>
    <!--Partial Menú-->
    <%- include('../partials/navbar'); %>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
        <h1 id ="h">BTS PREPARA COMEBACK PARA NOVIEMBRE ¿CUÁL ES EL SIGNIFICADO DE BE?</h1>
        <br>
        <h4 id ="h">El comeback de BTS con el álbum 'BE' podría tener varios significados,
            <br> muchos fans encontraron diversas conexiones interesantes.</h4>
        <br>
        <br>
        <p id = "pa">
            Una teoría apunta a que ‘BE’ podría ser parte de una saga de discos y <br>
            que el título oficial del comeback sería ‘BE YOURSELF’, agregado las <br>
            versiones ‘YOUR’ y ‘SELF’,no es la primera vez que los chicos presentan <br>
            este formato, la era ‘Love Yourself’ se publicó bajo la misma idea.   
        </p><br>
        <img src="/images/bt.jpg"  id="imagen"/>
        <p id = "pa">
            Otra posibilidad es que ‘BE’ signifique ‘Ser BTS’, ‘be’ en inglés es el verbo <br>
            ser o estar, implicando de BTS quiera comunicar su verdadero ser y personalidad. <br>
            Otras de las abreviaturas que se manejan son: ‘BTS Edition’ o ‘BTS Eternal’. <br>
            ¿Qué crees que signifique ‘BE’?   <br>

        </p><br>
        <img src="/images/li.jpg"  id="ima"/>
        <p id = "pa">
            Otra cosa que llamó la atención de los fanáticos e internautas es que la letra ‘B’ <br>
            es el segundo símbolo dentro del abecedario, mientras que ‘E’ es la número 5, al <br>
            sumar 2 y 5 el resultado es 7, un número muy importante que ha marcado su carrera <br>
            de los Bangtan Boys. <br>   
        </p><br>
            <h4 id ="h">Último MV de los chicos</h4>
        
    <div id="player"></div>

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '360',
          width: '640',
          videoId: 'gdZLi9oWNZg',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 1000000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
        function onPlayerReady(event) {
  
  event.target.playVideo();
}
      }
    </script>
  </body>
  <footer>
    <!--Partial Footer-->
     <%- include('../partials/footer'); %> 
</footer>
</html>